# Where are all the schema files located? globs are supported eg  src/**/*.graphqls
schema:
  - graph/*.graphqls

# Where should the generated server code go?
exec:
  package: graph
  layout: single-file # Only other option is "follow-schema," ie multi-file.

  # Only for single-file layout:
  filename: graph/generated.go

# Where should any generated models go?
model:
  filename: graph/model/models_gen.go
  package: model

# Where should the resolver implementations go?
resolver:
  package: graph
  layout: follow-schema # Only other option is "single-file."
  dir: graph
  filename_template: "{name}.resolvers.go"

# This section declares type mapping between the GraphQL and go type systems
models:
  Date:
    model:
      - github.com/99designs/gqlgen/graphql.Time # Use standard time for Date scalar
  SymbolDefinition:
    model:
      - github.com/mxcoppell/graphql-resolver-batch-cache/graph/model.SymbolDefinition
  ID:
    model:
      - github.com/99designs/gqlgen/graphql.ID
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32
  Int:
    model:
      - github.com/99designs/gqlgen/graphql.Int32
# Optional: turn on use `gqlgen` definitions whenever possible
# user_struct_name: true

# Optional: set this path to force LookForRootName before falling back
# to standard model detection mechanism.
# root_package: "github.com/mxcoppell/graphql-resolver-batch-cache"

# Optional: turn on autobinding for default model fields.
# autobind:
#  - "github.com/mxcoppell/graphql-resolver-batch-cache/internal/graph/model"
